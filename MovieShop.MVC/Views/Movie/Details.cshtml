@model MovieDetailsDto

@{
    ViewData["Title"] = $"{Model.Title}";
}

<div class="relative">
    <!-- Movie Backdrop -->
    <div class="absolute inset-0 bg-cover bg-center opacity-20 z-0"
         style="background-image: url('@(string.IsNullOrEmpty(Model.BackdropUrl) ? "/images/default-backdrop.jpg" : Model.BackdropUrl)'); height: 100%; filter: blur(5px);">
    </div>

    <div class="container mx-auto px-4 py-16 relative z-10">
        <div class="flex flex-col md:flex-row">
            <!-- Movie Poster -->
            <div class="w-full md:w-1/3 lg:w-1/4 mb-8 md:mb-0">
                <div class="rounded-lg overflow-hidden shadow-xl">
                    <img src="@(string.IsNullOrEmpty(Model.PosterUrl) ? "/images/default-movie.png" : Model.PosterUrl)"
                         alt="@Model.Title"
                         class="w-full h-auto">
                </div>
            </div>

            <!-- Movie Details -->
            <div class="w-full md:w-2/3 lg:w-3/4 md:pl-8">
                <h1 class="text-4xl font-bold text-primary mb-2">@Model.Title</h1>

                @if (!string.IsNullOrEmpty(Model.Tagline))
                {
                    <p class="text-xl text-gray-600 italic mb-4">"@Model.Tagline"</p>
                }

                <div class="mb-6">
                    <span class="inline-block bg-primary text-white text-sm px-3 py-1 rounded-full mr-2 mb-2">
                        @(Model.ReleaseDate.HasValue ? Model.ReleaseDate.Value.Year.ToString() : "N/A")
                    </span>

                    @if (Model.Runtime.HasValue)
                    {
                        <span class="inline-block bg-gray-200 text-gray-800 text-sm px-3 py-1 rounded-full mr-2 mb-2">
                            @(Model.Runtime.Value) min
                        </span>
                    }

                    @foreach (var genre in Model.Genres)
                    {
                        <span class="inline-block bg-secondary text-white text-sm px-3 py-1 rounded-full mr-2 mb-2">
                            @genre
                        </span>
                    }
                </div>

                <div class="mb-6">
                    <h2 class="text-2xl font-semibold mb-2">Overview</h2>
                    <p class="text-gray-700">@(string.IsNullOrEmpty(Model.Overview) ? "No overview available." : Model.Overview)</p>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
                    @if (Model.Budget is > 0)
                    {
                        <div>
                            <h3 class="text-lg font-semibold text-gray-700">Budget</h3>
                            <p class="text-gray-600">$@(Model.Budget.Value.ToString("N0"))</p>
                        </div>
                    }

                    @if (Model.Revenue.HasValue && Model.Revenue > 0)
                    {
                        <div>
                            <h3 class="text-lg font-semibold text-gray-700">Revenue</h3>
                            <p class="text-gray-600">$@(Model.Revenue.Value.ToString("N0"))</p>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(Model.OriginalLanguage))
                    {
                        <div>
                            <h3 class="text-lg font-semibold text-gray-700">Language</h3>
                            <p class="text-gray-600">@Model.OriginalLanguage</p>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(Model.ImdbUrl))
                    {
                        <div>
                            <h3 class="text-lg font-semibold text-gray-700">IMDB</h3>
                            <a href="@Model.ImdbUrl" target="_blank" class="text-blue-600 hover:underline">View on
                                IMDB</a>
                        </div>
                    }
                </div>
                @if (Model.Price is > 0)
                {
                    <div class="mb-6">
                        <h3 class="text-lg font-semibold text-gray-700">Price</h3>
                        <p class="text-2xl font-bold text-primary">$@(Model.Price.Value.ToString("F2"))</p>
                        <button
                            class="mt-2 bg-secondary hover:bg-secondary-light text-white font-bold py-2 px-4 rounded transition duration-300">
                            Purchase
                        </button>
                    </div>
                }
            </div>
        </div>

        <!-- Cast Section -->
        @if (Model.Casts.Any())
        {
            <div class="mt-12">
                <h2 class="text-2xl font-bold mb-6 text-primary relative inline-block">
                    Cast
                    <span class="absolute bottom-0 left-0 w-1/2 h-1 bg-secondary"></span>
                </h2>

                <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4">
                    @foreach (var cast in Model.Casts)
                    {
                        <div
                            class="bg-white rounded-lg overflow-hidden shadow-md hover:shadow-xl transition duration-300">
                            <div class="relative pb-[150%] overflow-hidden">
                                <img
                                    src="@(string.IsNullOrEmpty(cast.ProfilePath) ? "/images/default-profile.png" : cast.ProfilePath)"
                                    alt="@cast.Name"
                                    class="absolute top-0 left-0 w-full h-full object-cover">
                            </div>
                            <div class="p-3">
                                <h3 class="font-semibold text-gray-800 text-sm">@cast.Name</h3>
                                <p class="text-gray-600 text-xs">@cast.Character</p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>
